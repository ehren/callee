

# def (foo<T> -> def (foo:template<typename T>
defmacro(def (func_name<t>:specifier, args), func_name, t: Identifier, specifier: Node|None, args: [Node]:
    tmp = if (specifier:
        specified_template: Node = quote(template<typename:unquote(t)>:unquote(specifier))
        specified_template
    else:
        just_template: Node = quote(template<typename:unquote(t)>)
        just_template
    )

    new_args: mut:[Node] = [quote(unquote(func_name):unquote(tmp))]
    new_args.insert(new_args.end(), args.begin(), args.end())

    return Call(quote(def), new_args)
)
