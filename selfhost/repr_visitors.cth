include <pybind11/pybind11.h>

include (visitor)
include (ast)
include (string_utils)


struct (EvalableAstReprVisitor(BaseVisitor<EvalableAstReprVisitor>):
    # This should really just be a few virtual methods on Node, but we want to keep the visitor infrastructure in place for the future

    repr = ""

    def (visit: virtual:mut, node: Node.class:
        self.repr += class_name(&node) + "("

        if (node.func:
            node.func.accept(*this)
            self.repr += ", "
        )

        if (node.args.size() > 0:
            self.repr += "["

            for (arg in node.args:
                arg.accept(*this)
                self.repr += ", "
            )

            self.repr += "]"
        )

        self.repr += ")"
    )

    def (visit: virtual:mut, node: UnOp.class:
        self.repr += class_name(&node) + "(" +  node.op + ", ["
        node.args[0].accept(*this)
        self.repr += "])"
    )

    def (visit: virtual:mut, node: LeftAssociativeUnOp.class:
        self.repr += class_name(&node) + "(" +  node.op + ", ["
        node.args[0].accept(*this)
        self.repr += "])"
    )

    def (visit: virtual:mut, node: BinOp.class:
        self.repr += class_name(&node) + "(" +  node.op + ", ["
        for (arg in node.args:
            arg.accept(*this)
            self.repr += ", "
        )
        self.repr += "])"
    )
)
