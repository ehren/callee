
#include <string>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <fstream>
#include <sstream>
#include <functional>
#include <cassert>
#include <compare> // for <=>
#include <thread>
#include <optional>

//#include <concepts>
//#include <ranges>
//#include <numeric>


#include "ceto.h"

#include "ast.donotedit.autogenerated.h"
;
#include "visitor.donotedit.autogenerated.h"
;
struct MacroVisitor : public Visitor {

using Visitor::Visitor;

    std::shared_ptr<const Node> pattern;

         virtual inline auto visit(const std::shared_ptr<const ListLiteral>&  list_literal) -> void {
            for(const auto& arg : ceto::mado(list_literal)->args) {
                ceto::mado(arg)->accept((*this));
            }
        }

    explicit MacroVisitor(std::shared_ptr<const Node> pattern) : pattern(pattern) {}

    MacroVisitor() = delete;

};

